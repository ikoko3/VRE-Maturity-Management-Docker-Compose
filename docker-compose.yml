services:
  keycloak:
    image: ghcr.io/ikoko3/keycloak-preseed:poc
    container_name: kc-poc
    ports:
      - "8080:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: change_me
    command: start-dev --import-realm
    # optional:
    # pull_policy: always

  mongodb:
    image: ghcr.io/ikoko3/mongo-preseed:poc
    container_name: mongo-seeded
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: appdb
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.adminCommand({ping:1}).ok' | grep 1"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 10s
    networks:
      default:
        aliases:
          - mongo

  backend:
    image: ghcr.io/ikoko3/vre_maturity_level_management:poc
    container_name: thesis-backend
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - "3000:3000"   # backend listens on 3000
    environment:
      # use the service name "mongodb" for in-cluster DNS
      MONGO_URI: mongodb://root:example@mongodb:27017/vre_level?authSource=admin
      OIDC_ISSUER_URL: http://keycloak:8080/realms/vre
      OIDC_CLIENT_ID: app-frontend
      OIDC_CLIENT_SECRET: change_me
      PUBLIC_FRONTEND_URL: http://localhost:4000
      NODE_ENV: docker
    # optional:
    # pull_policy: always

  frontend:
    image: ghcr.io/ikoko3/vre_levels_front:poc
    container_name: thesis-frontend
    depends_on:
      backend:
        condition: service_started
    ports:
      - "4000:4000"   # frontend listens on 4000
    environment:
      # IMPORTANT: your frontend should call the backend on host:3000
      NEXT_PUBLIC_API_BASE_URL: http://localhost:3000
      VITE_API_URL: http://localhost:3000
      VITE_OIDC_ISSUER: http://keycloak:8080/realms/vre
      VITE_OIDC_CLIENT_ID: app-frontend
      VITE_OIDC_REDIRECT_URI: http://localhost:4000/callback
      VITE_OIDC_LOGOUT_REDIRECT_URI: http://localhost:4000/
    # optional:
    # pull_policy: always
